* How did viewing a diff between two versions 
of a file help you see the bug that was introduced?

I was able to concentrate solely on what is different
and conclude immediately what caused the bug.
In long files the amount of lines that are the same 
is much greater than the number of lines which are different.
It will be wastful to check manually the difference between 
2 files. And impossible in some cases.


* How could having easy access to the entire history of a file
make you a more efficient programmer in the long term?

If an error has been made, and I know of earlier version
that worked better I could compare the 2 files, and 
conclude what change has caused the error.
If I hadn't have the old file, I wouldn't have anything to
compare with, resulting in a time consuming task in order
to find the bug.

* What do you think are the pros and cons of manually choosing
 when to create a commit, like you do in Git,
 vs having versions automatically saved, like Google Docs does?

Pros for manually choosing to commit:
Since the commiting requires that you add text explaining 
'why you chose to commit', each commit marks a point of
significant in your work. The commit has meaning that
automatic saving might not have.
Cons for manually choosing to commit:
You might forget to commit after doing some work.
Also commiting is based on a judgment call,
and it might happen that not everyone can do that correctly.

* Why do you think some version control systems, like Git,
 allow saving multiple files in one commit, 
while others, like Google Docs, treat each file separately?

Google docs is used for simple documents that don't depend
on other files, while, git is used for programing (and other stuff).
In programing sometimes one file depend on another,
so saving couple of files toghther make a clean restore point,
in contrast to saving only one file, which could cause 
mixed versions of the files, and thus creating bugs.

*How can you use the commands git log 
and git diff to view the history of files?

I use git log to find which 2 versions I should compare
I use git diff to comapre the 2 versions that I chose.


